"use strict";

var initZeroConfig = function initZeroConfig() {
    $("#zeroConfig").dataTable({
      pagingType: "simple_numbers",
      lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
      language: {
        paginate: {
          previous: '<i class="bi bi-chevron-left"></i>',
          next: '<i class="bi bi-chevron-right"></i>'
        }
      }
    });
  },
  initComplexHeaders = function initComplexHeaders() {
    $("#complexHeaders").dataTable({
      pagingType: "simple_numbers",
      lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
      language: {
        paginate: {
          previous: '<i class="bi bi-chevron-left"></i>',
          next: '<i class="bi bi-chevron-right"></i>'
        }
      }
    });
  },
  initScrollVertical = function initScrollVertical() {
    $("#scrollVertical").dataTable({
      paging: !1,
      scrollCollapse: !0,
      scrollY: 300
    });
  },
  initBothScrolls = function initBothScrolls() {
    $("#bothScrolls").dataTable({
      scrollX: !0,
      scrollY: 300,
      lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
      pagingType: "simple_numbers",
      language: {
        paginate: {
          previous: '<i class="bi bi-chevron-left"></i>',
          next: '<i class="bi bi-chevron-right"></i>'
        }
      }
    });
  },
  initStripeHover = function initStripeHover() {
    $("#stripeHover").dataTable({
      pagingType: "simple_numbers",
      lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
      language: {
        paginate: {
          previous: '<i class="bi bi-chevron-left"></i>',
          next: '<i class="bi bi-chevron-right"></i>'
        }
      }
    });
  },
  initRowGrouping = function initRowGrouping() {
    var t = $("#rowGrouping").DataTable({
      columnDefs: [{
        visible: !1,
        targets: 2
      }],
      order: [[2, "asc"]],
      displayLength: 25,
      drawCallback: function drawCallback(i) {
        var t = this.api(),
          e = t.rows({
            page: "current"
          }).nodes(),
          n = null;
        t.column(2, {
          page: "current"
        }).data().each(function (i, t) {
          n !== i && ($(e).eq(t).before('<tr class="group"><td colspan="5">' + i + "</td></tr>"), n = i);
        });
      }
    });
    $("#rowGrouping tbody").on("click", "tr.group", function () {
      var i = t.order()[0];
      (2 === i[0] && "asc" === i[1] ? t.order([2, "desc"]) : t.order([2, "asc"])).draw();
    });
  },
  initFooterCallback = function initFooterCallback() {
    $("#footerCallback").DataTable({
      footerCallback: function footerCallback(i, t, e, n, a) {
        function l(i) {
          return "string" == typeof i ? +i.replace(/[\$,]/g, "") : "number" == typeof i ? i : 0;
        }
        var o = this.api(),
          r = o.column(4).data().reduce(function (i, t) {
            return l(i) + l(t);
          }, 0),
          s = o.column(4, {
            page: "current"
          }).data().reduce(function (i, t) {
            return l(i) + l(t);
          }, 0);
        $(o.column(4).footer()).html("$" + s + " ( $" + r + " total)");
      }
    });
  },
  initDataTablesExport = function initDataTablesExport() {
    $("#dataTablesExport").DataTable({
      dom: "Bfrtip",
      responsive: !0,
      buttons: {
        dom: {
          button: {
            className: "btn btn-light btn-rounded"
          }
        },
        buttons: ["copy", "csv", "excel", "pdf", {
          extend: "print",
          text: "Print Alls",
          exportOptions: {
            modifier: {
              selected: null
            }
          }
        }]
      }
    });
  },
  initDataTablesVisiblity = function initDataTablesVisiblity() {
    $("#dataTablesVisiblity").DataTable({
      dom: "Bfrtip",
      responsive: !0,
      buttons: {
        dom: {
          button: {
            className: "btn btn-light btn-rounded"
          }
        },
        buttons: [{
          extend: "print",
          exportOptions: {
            columns: ":visible"
          }
        }, "colvis"]
      },
      columnDefs: [{
        targets: -1,
        visible: !1
      }]
    });
  };
initZeroConfig(), initComplexHeaders(), initScrollVertical(), initBothScrolls(), initStripeHover(), initRowGrouping(), initFooterCallback(), initDataTablesExport(), initDataTablesVisiblity();