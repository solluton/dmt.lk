"use strict";

function initPieCharts() {
  $("span.pie").peity("pie", {
    width: 50,
    height: 50,
    fill: function fill(t, i, n) {
      return "rgb(60, " + parseInt(i / n.length * 255) + ", 230)";
    }
  });
}
function initDonutCharts() {
  $("span.donut").peity("donut", {
    width: 50,
    height: 50,
    fill: function fill(t, i, n) {
      return "rgb(60, " + parseInt(i / n.length * 255) + ", 230)";
    }
  });
}
function initLineCharts() {
  $("span.line").peity("line", {
    width: 50,
    height: 50,
    stroke: ["#015941"]
  });
}
function initBarCharts() {
  $("span.bar").peity("bar", {
    width: 50,
    height: 50,
    fill: ["#015941"]
  });
}
function initDataAttributes() {
  $(".data-attributes span").peity("donut");
}
function initDynamicColours() {
  $(".bar-colours-1").peity("bar", {
    width: 50,
    height: 50,
    fill: ["#d13b4c", "#25b865", "#015941"]
  }), $(".bar-colours-2").peity("bar", {
    width: 50,
    height: 50,
    fill: function fill(t) {
      return 0 < t ? "#25b865" : "#d13b4c";
    }
  }), $(".bar-colours-3").peity("bar", {
    width: 50,
    height: 50,
    fill: function fill(t, i, n) {
      return "rgb(255, " + parseInt(i / n.length * 255) + ", 0)";
    }
  }), $(".pie-colours-1").peity("pie", {
    width: 50,
    height: 50,
    fill: ["#41b2c4", "#e83e8c", "#ffa21d", "#283c50"]
  }), $(".pie-colours-2").peity("pie", {
    width: 50,
    height: 50,
    fill: function fill(t, i, n) {
      return "rgb(255, " + parseInt(i / n.length * 255) + ", 0)";
    }
  });
}
function initUpdatingCharts() {
  var n = $(".updating-chart").peity("line", {
    width: 320,
    height: 79,
    stroke: ["#015941"]
  });
  setInterval(function () {
    var t = Math.round(10 * Math.random()),
      i = n.text().split(",");
    i.shift(), i.push(t), n.text(i.join(",")).change();
  }, 1e3);
}
initPieCharts(), initDonutCharts(), initLineCharts(), initBarCharts(), initDataAttributes(), initDynamicColours(), initUpdatingCharts();