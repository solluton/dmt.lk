"use strict";

function createSlider(e, i) {
  e = document.getElementById(e);
  e && noUiSlider.create(e, i);
}
function initializeSliders() {
  createSlider("sliderBasic", {
    start: [50],
    connect: [!0, !1],
    direction: "ltr",
    range: {
      min: 0,
      max: 100
    }
  }), createSlider("sliderHandles", {
    start: [0, 50],
    direction: "ltr",
    step: 5,
    connect: !0,
    range: {
      min: 0,
      max: 100
    },
    pips: {
      mode: "range",
      density: 5,
      stepped: !0
    }
  }), createSlider("sliderSteps", {
    start: [0, 50],
    snap: !0,
    connect: !0,
    direction: "ltr",
    range: {
      min: 0,
      "10%": 10,
      "20%": 20,
      "30%": 30,
      "40%": 40,
      "50%": 50,
      max: 100
    }
  }), createSlider("sliderTap", {
    start: [10, 30],
    behaviour: "tap",
    direction: "ltr",
    connect: !0,
    range: {
      min: 10,
      max: 100
    }
  }), createSlider("sliderDrag", {
    start: [40, 60],
    limit: 20,
    behaviour: "drag",
    direction: "ltr",
    connect: !0,
    range: {
      min: 20,
      max: 80
    }
  }), createSlider("sliderFixedDrag", {
    start: [40, 60],
    behaviour: "drag-fixed",
    direction: "ltr",
    connect: !0,
    range: {
      min: 20,
      max: 80
    }
  }), createSlider("sliderCombinedOptions", {
    start: [40, 60],
    behaviour: "drag-tap",
    direction: "ltr",
    connect: !0,
    range: {
      min: 20,
      max: 80
    }
  }), createSlider("sliderPips", {
    start: [10],
    behaviour: "tap-drag",
    step: 10,
    tooltips: !0,
    range: {
      min: 0,
      max: 100
    },
    pips: {
      mode: "steps",
      stepped: !0,
      density: 5
    },
    direction: "ltr"
  });
}
function initializeDynamicSlider() {
  var e = document.getElementById("sliderDynamic"),
    t = document.getElementById("sliderSelect"),
    r = document.getElementById("sliderInput");
  if (e && (noUiSlider.create(e, {
    start: [10, 30],
    connect: !0,
    direction: "ltr",
    range: {
      min: -20,
      max: 40
    }
  }), e.noUiSlider.on("update", function (e, i) {
    1 === i ? r.value = Math.round(e[i]) : t.value = Math.round(e[i]);
  })), t) {
    for (var _e = -20; _e <= 40; _e++) {
      var i = document.createElement("option");
      i.text = _e, i.value = _e, t.appendChild(i);
    }
    t.addEventListener("change", function () {
      e.noUiSlider.set([this.value, null]);
    });
  }
  r && r.addEventListener("change", function () {
    e.noUiSlider.set([null, this.value]);
  });
}
function initializeVerticalSliders() {
  var e = document.getElementById("sliderVertical"),
    i = document.getElementById("sliderConnectUpper"),
    t = document.getElementById("sliderVerticalTooltip"),
    r = document.getElementById("sliderVerticalLimit");
  e && (e.style.height = "200px", noUiSlider.create(e, {
    start: [40, 60],
    orientation: "vertical",
    behaviour: "drag",
    connect: !0,
    range: {
      min: 0,
      max: 100
    }
  })), i && (i.style.height = "200px", noUiSlider.create(i, {
    start: 40,
    orientation: "vertical",
    behaviour: "drag",
    connect: "upper",
    range: {
      min: 0,
      max: 100
    }
  })), t && (t.style.height = "200px", noUiSlider.create(t, {
    start: 10,
    orientation: "vertical",
    behaviour: "drag",
    tooltips: !0,
    range: {
      min: 0,
      max: 100
    }
  })), r && (r.style.height = "200px", noUiSlider.create(r, {
    start: [0, 40],
    orientation: "vertical",
    behaviour: "drag",
    limit: 60,
    tooltips: !0,
    connect: !0,
    range: {
      min: 0,
      max: 100
    }
  }));
}
function initializeThemesSlider() {
  var e;
  function i(r, e) {
    var n = document.getElementById(r);
    switch (noUiSlider.create(n, e), r) {
      case "sliderPrimary":
        n.querySelector(".noUi-connect").classList.add("bg-primary");
        break;
      case "sliderSuccess":
        n.querySelector(".noUi-connect").classList.add("bg-success");
        break;
      case "sliderDanger":
        n.querySelector(".noUi-connect").classList.add("bg-danger");
        break;
      case "sliderInfo":
        n.querySelector(".noUi-connect").classList.add("bg-info");
        break;
      case "sliderWarning":
        n.querySelector(".noUi-connect").classList.add("bg-warning");
        break;
      default:
        n.querySelector(".noUi-connect").classList.add("bg-primary");
    }
    n.noUiSlider.on("update", function (e, i) {
      if (i === n.noUiSlider.get().length - 1) {
        var t = n.querySelector(".noUi-handle-upper");
        if (t) switch (r) {
          case "sliderPrimary":
            t.classList.add("bg-primary");
            break;
          case "sliderSuccess":
            t.classList.add("bg-success");
            break;
          case "sliderDanger":
            t.classList.add("bg-danger");
            break;
          case "sliderInfo":
            t.classList.add("bg-info");
            break;
          case "sliderWarning":
            t.classList.add("bg-warning");
            break;
          default:
            t.classList.add("bg-primary");
        }
      }
    });
  }
  document.getElementById("sliderPrimary") && (i("sliderPrimary", e = {
    start: [20, 50],
    connect: !0,
    behaviour: "tap-drag",
    step: 10,
    tooltips: !0,
    range: {
      min: 0,
      max: 100
    },
    direction: "ltr"
  }), i("sliderSuccess", e), i("sliderDanger", e), i("sliderInfo", e), i("sliderWarning", e));
}
initializeSliders(), initializeDynamicSlider(), initializeVerticalSliders(), initializeThemesSlider();